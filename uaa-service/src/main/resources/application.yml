spring:
  application:
    name: uaa-service
  rabbitmq:
    host: 192.168.253.132
    port: 5672
    username: root
    password: 308308
  sleuth:
    sampler:
      percentage: 1
    integration:
      enabled: false
    scheduled:
      skip-pattern: "^org.*HystrixStreamTask$"

# Define the port where the UAA server would be running
server:
  port: 8769
  # Use different context-path to avoid session cookie overlapping
  context-path: /uaa
  use-forward-headers: false

# Define the Eureka server that handles service registration
eureka:
  instance:
      hostname: localhost
      port: 8761
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/




# Define security
security:
  basic:
    enabled: false
  user:
    password: password
  ignored: /css/**,/js/**,/favicon.ico,/webjars/**


logging:
  level.org.springframework.security: DEBUG

---
spring:
  profiles: docker

server:
  port: ${SERVICE_PORT}

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: ${REGISTRY_URL}